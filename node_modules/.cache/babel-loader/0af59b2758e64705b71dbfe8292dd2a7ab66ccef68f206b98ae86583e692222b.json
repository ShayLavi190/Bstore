{"ast":null,"code":"const handlePayment = async () => {\n  if (!fullName || !phone || !country || !city || !street || !number || !CreditCardNumber || !ValidDate || !CVV || !email) {\n    alert('Please fill in all required fields.');\n    return;\n  }\n  if (CVV.length !== 3) {\n    alert('Please enter a valid CVV.');\n    return;\n  }\n  const creditCardRegex = /^\\d{16}$/;\n  if (!creditCardRegex.test(CreditCardNumber)) {\n    alert('Please enter a valid credit card number.');\n    return;\n  }\n  // Perform payment processing logic here\n  try {\n    const response = await axios.post('http://localhost:6500/order', {\n      name: fullName,\n      phone,\n      email,\n      ispaid: false,\n      // assuming payment is not made yet\n      address: {\n        street,\n        city,\n        number,\n        apt,\n        country\n      },\n      creditCard: CreditCardNumber,\n      expiryDate: ValidDate,\n      cvv: CVV,\n      items: [] // array of items, you need to include items in the order if available\n    });\n    alert('Order submitted');\n    navigate('/shop');\n  } catch (error) {\n    console.error('Error submitting order:', error);\n    alert('An error occurred while submitting the order. Please try again later.');\n  }\n};","map":{"version":3,"names":["handlePayment","fullName","phone","country","city","street","number","CreditCardNumber","ValidDate","CVV","email","alert","length","creditCardRegex","test","response","axios","post","name","ispaid","address","apt","creditCard","expiryDate","cvv","items","navigate","error","console"],"sources":["/Users/shaylavi/Desktop/bstore/src/pages/Checkout/Checkout.jsx"],"sourcesContent":["const handlePayment = async () => {\n  if (!fullName || !phone || !country || !city || !street || !number || !CreditCardNumber || !ValidDate || !CVV || !email) {\n    alert('Please fill in all required fields.');\n    return;\n  }\n  if (CVV.length !== 3) {\n    alert('Please enter a valid CVV.');\n    return;\n  }\n  const creditCardRegex = /^\\d{16}$/;\n  if (!creditCardRegex.test(CreditCardNumber)) {\n    alert('Please enter a valid credit card number.');\n    return;\n  }\n  // Perform payment processing logic here\n  try {\n    const response = await axios.post('http://localhost:6500/order', {\n      name: fullName,\n      phone,\n      email,\n      ispaid: false, // assuming payment is not made yet\n      address: {\n        street,\n        city,\n        number,\n        apt,\n        country\n      },\n      creditCard: CreditCardNumber,\n      expiryDate: ValidDate,\n      cvv: CVV,\n      items: [] // array of items, you need to include items in the order if available\n    });\n    alert('Order submitted');\n    navigate('/shop');\n  } catch (error) {\n    console.error('Error submitting order:', error);\n    alert('An error occurred while submitting the order. Please try again later.');\n  }\n};\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI,CAACC,QAAQ,IAAI,CAACC,KAAK,IAAI,CAACC,OAAO,IAAI,CAACC,IAAI,IAAI,CAACC,MAAM,IAAI,CAACC,MAAM,IAAI,CAACC,gBAAgB,IAAI,CAACC,SAAS,IAAI,CAACC,GAAG,IAAI,CAACC,KAAK,EAAE;IACvHC,KAAK,CAAC,qCAAqC,CAAC;IAC5C;EACF;EACA,IAAIF,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IACpBD,KAAK,CAAC,2BAA2B,CAAC;IAClC;EACF;EACA,MAAME,eAAe,GAAG,UAAU;EAClC,IAAI,CAACA,eAAe,CAACC,IAAI,CAACP,gBAAgB,CAAC,EAAE;IAC3CI,KAAK,CAAC,0CAA0C,CAAC;IACjD;EACF;EACA;EACA,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,6BAA6B,EAAE;MAC/DC,IAAI,EAAEjB,QAAQ;MACdC,KAAK;MACLQ,KAAK;MACLS,MAAM,EAAE,KAAK;MAAE;MACfC,OAAO,EAAE;QACPf,MAAM;QACND,IAAI;QACJE,MAAM;QACNe,GAAG;QACHlB;MACF,CAAC;MACDmB,UAAU,EAAEf,gBAAgB;MAC5BgB,UAAU,EAAEf,SAAS;MACrBgB,GAAG,EAAEf,GAAG;MACRgB,KAAK,EAAE,EAAE,CAAC;IACZ,CAAC,CAAC;IACFd,KAAK,CAAC,iBAAiB,CAAC;IACxBe,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/ChB,KAAK,CAAC,uEAAuE,CAAC;EAChF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
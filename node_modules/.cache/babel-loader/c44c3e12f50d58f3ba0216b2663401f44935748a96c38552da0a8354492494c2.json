{"ast":null,"code":"var _jsxFileName = \"/Users/shaylavi/Desktop/bstore/src/context/shop-context.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nexport const ShopContextProvider = props => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState({});\n  useEffect(() => {\n    fetchProducts();\n    const interval = setInterval(fetchProducts, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:6500/products\");\n      const fetchedProducts = response.data.products;\n      setProducts(fetchedProducts);\n      fetchedProducts.forEach(async product => {\n        if (product.notify && product.notify.length > 0) {\n          product.notify.forEach(email => {\n            console.log(`Sending email to ${email} for product ${product.name}`);\n          });\n          product.notify = [];\n          await updateProduct(product._id, product);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    }\n  };\n  const updateProduct = async (productId, updatedProductData) => {\n    try {\n      await axios.put(`http://localhost:6500/products/${productId}`, updatedProductData);\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const itemId in cartItems) {\n      if (cartItems[itemId] > 0) {\n        let itemInfo = products.find(product => product.prod_id === Number(itemId));\n        totalAmount += cartItems[itemId] * itemInfo.price;\n      }\n    }\n    return totalAmount;\n  };\n  const addToCart = itemId => {\n    const product = products.find(product => product.prod_id === itemId);\n    if (!product) {\n      console.error(`Product with ID ${itemId} not found.`);\n      return;\n    }\n    if (product.quantity <= 0) {\n      alert('Sorry, this product is out of stock.');\n      return;\n    }\n    if (product.quantity <= 0) {\n      alert('Sorry, this product is out of stock.');\n      return;\n    }\n    setCartItems(prevCartItems => {\n      const updatedCartItems = {\n        ...prevCartItems\n      };\n      updatedCartItems[itemId] = updatedCartItems[itemId] ? updatedCartItems[itemId] + 1 : 1;\n      return updatedCartItems;\n    });\n    updateProduct(itemId, {\n      ...product,\n      quantity: product.quantity - 1\n    });\n    alert(\"Item added to cart\");\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prevCartItems => {\n      const updatedCartItems = {\n        ...prevCartItems\n      };\n      updatedCartItems[itemId] = updatedCartItems[itemId] ? updatedCartItems[itemId] - 1 : 0;\n      return updatedCartItems;\n    });\n  };\n  const updateCartItemCount = (newAmount, itemId) => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: newAmount\n    }));\n  };\n  const checkout = () => {\n    setCartItems({});\n  };\n  const contextValue = {\n    cartItems,\n    addToCart,\n    updateCartItemCount,\n    removeFromCart,\n    getTotalCartAmount,\n    checkout,\n    products\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"Rxl7v7iBpujQJ1zvH9Toucmduc0=\");\n_c = ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["axios","React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","products","setProducts","cartItems","setCartItems","fetchProducts","interval","setInterval","clearInterval","response","get","fetchedProducts","data","forEach","product","notify","length","email","console","log","name","updateProduct","_id","error","productId","updatedProductData","put","getTotalCartAmount","totalAmount","itemId","itemInfo","find","prod_id","Number","price","addToCart","quantity","alert","prevCartItems","updatedCartItems","removeFromCart","updateCartItemCount","newAmount","prev","checkout","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shaylavi/Desktop/bstore/src/context/shop-context.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\n\nexport const ShopContext = createContext(null);\n\nexport const ShopContextProvider = (props) => {\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState({});\n  useEffect(() => {\n    fetchProducts(); \n    const interval = setInterval(fetchProducts, 60000); \n\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:6500/products\");\n      const fetchedProducts = response.data.products;\n      setProducts(fetchedProducts);\n\n      fetchedProducts.forEach(async product => {\n        if (product.notify && product.notify.length > 0) {\n          product.notify.forEach(email => {\n            console.log(`Sending email to ${email} for product ${product.name}`);\n          });\n\n          product.notify = [];\n          await updateProduct(product._id, product);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    }\n  };\n\n  const updateProduct = async (productId, updatedProductData) => {\n    try {\n      await axios.put(`http://localhost:6500/products/${productId}`, updatedProductData);\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n    }\n  };\n\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const itemId in cartItems) {\n      if (cartItems[itemId] > 0) {\n        let itemInfo = products.find((product) => product.prod_id === Number(itemId));\n        totalAmount += cartItems[itemId] * itemInfo.price;\n      }\n    }\n    return totalAmount;\n  };\n\n  const addToCart = (itemId) => {\n    const product = products.find((product) => product.prod_id === itemId);\n    if (!product) {\n      console.error(`Product with ID ${itemId} not found.`);\n      return;\n    }\n    if (product.quantity <= 0) {\n      alert('Sorry, this product is out of stock.');\n      return;\n    }\n    if (product.quantity <= 0) {\n      alert('Sorry, this product is out of stock.');\n      return;\n    }\n    setCartItems((prevCartItems) => {\n      const updatedCartItems = { ...prevCartItems };\n      updatedCartItems[itemId] = updatedCartItems[itemId] ? updatedCartItems[itemId] + 1 : 1;\n      return updatedCartItems;\n    });\n  \n    updateProduct(itemId, { ...product, quantity: product.quantity - 1 });\n  \n    alert(\"Item added to cart\");\n  };\n  \n\n  const removeFromCart = (itemId) => {\n    setCartItems((prevCartItems) => {\n      const updatedCartItems = { ...prevCartItems };\n      updatedCartItems[itemId] = updatedCartItems[itemId] ? updatedCartItems[itemId] - 1 : 0;\n      return updatedCartItems;\n    });\n  };\n\n  const updateCartItemCount = (newAmount, itemId) => {\n    setCartItems((prev) => ({ ...prev, [itemId]: newAmount }));\n  };\n\n  const checkout = () => {\n    setCartItems({});\n  };\n\n  const contextValue = {\n    cartItems,\n    addToCart,\n    updateCartItemCount,\n    removeFromCart,\n    getTotalCartAmount,\n    checkout,\n    products,\n  };\n\n  return (\n    <ShopContext.Provider value={contextValue}>\n      {props.children}\n    </ShopContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMM,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;IACf,MAAMC,QAAQ,GAAGC,WAAW,CAACF,aAAa,EAAE,KAAK,CAAC;IAElD,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,gCAAgC,CAAC;MAClE,MAAMC,eAAe,GAAGF,QAAQ,CAACG,IAAI,CAACX,QAAQ;MAC9CC,WAAW,CAACS,eAAe,CAAC;MAE5BA,eAAe,CAACE,OAAO,CAAC,MAAMC,OAAO,IAAI;QACvC,IAAIA,OAAO,CAACC,MAAM,IAAID,OAAO,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UAC/CF,OAAO,CAACC,MAAM,CAACF,OAAO,CAACI,KAAK,IAAI;YAC9BC,OAAO,CAACC,GAAG,CAAE,oBAAmBF,KAAM,gBAAeH,OAAO,CAACM,IAAK,EAAC,CAAC;UACtE,CAAC,CAAC;UAEFN,OAAO,CAACC,MAAM,GAAG,EAAE;UACnB,MAAMM,aAAa,CAACP,OAAO,CAACQ,GAAG,EAAER,OAAO,CAAC;QAC3C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMF,aAAa,GAAG,MAAAA,CAAOG,SAAS,EAAEC,kBAAkB,KAAK;IAC7D,IAAI;MACF,MAAMnC,KAAK,CAACoC,GAAG,CAAE,kCAAiCF,SAAU,EAAC,EAAEC,kBAAkB,CAAC;IACpF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAK,MAAMC,MAAM,IAAI1B,SAAS,EAAE;MAC9B,IAAIA,SAAS,CAAC0B,MAAM,CAAC,GAAG,CAAC,EAAE;QACzB,IAAIC,QAAQ,GAAG7B,QAAQ,CAAC8B,IAAI,CAAEjB,OAAO,IAAKA,OAAO,CAACkB,OAAO,KAAKC,MAAM,CAACJ,MAAM,CAAC,CAAC;QAC7ED,WAAW,IAAIzB,SAAS,CAAC0B,MAAM,CAAC,GAAGC,QAAQ,CAACI,KAAK;MACnD;IACF;IACA,OAAON,WAAW;EACpB,CAAC;EAED,MAAMO,SAAS,GAAIN,MAAM,IAAK;IAC5B,MAAMf,OAAO,GAAGb,QAAQ,CAAC8B,IAAI,CAAEjB,OAAO,IAAKA,OAAO,CAACkB,OAAO,KAAKH,MAAM,CAAC;IACtE,IAAI,CAACf,OAAO,EAAE;MACZI,OAAO,CAACK,KAAK,CAAE,mBAAkBM,MAAO,aAAY,CAAC;MACrD;IACF;IACA,IAAIf,OAAO,CAACsB,QAAQ,IAAI,CAAC,EAAE;MACzBC,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IACA,IAAIvB,OAAO,CAACsB,QAAQ,IAAI,CAAC,EAAE;MACzBC,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IACAjC,YAAY,CAAEkC,aAAa,IAAK;MAC9B,MAAMC,gBAAgB,GAAG;QAAE,GAAGD;MAAc,CAAC;MAC7CC,gBAAgB,CAACV,MAAM,CAAC,GAAGU,gBAAgB,CAACV,MAAM,CAAC,GAAGU,gBAAgB,CAACV,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;MACtF,OAAOU,gBAAgB;IACzB,CAAC,CAAC;IAEFlB,aAAa,CAACQ,MAAM,EAAE;MAAE,GAAGf,OAAO;MAAEsB,QAAQ,EAAEtB,OAAO,CAACsB,QAAQ,GAAG;IAAE,CAAC,CAAC;IAErEC,KAAK,CAAC,oBAAoB,CAAC;EAC7B,CAAC;EAGD,MAAMG,cAAc,GAAIX,MAAM,IAAK;IACjCzB,YAAY,CAAEkC,aAAa,IAAK;MAC9B,MAAMC,gBAAgB,GAAG;QAAE,GAAGD;MAAc,CAAC;MAC7CC,gBAAgB,CAACV,MAAM,CAAC,GAAGU,gBAAgB,CAACV,MAAM,CAAC,GAAGU,gBAAgB,CAACV,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;MACtF,OAAOU,gBAAgB;IACzB,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAACC,SAAS,EAAEb,MAAM,KAAK;IACjDzB,YAAY,CAAEuC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACd,MAAM,GAAGa;IAAU,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrBxC,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMyC,YAAY,GAAG;IACnB1C,SAAS;IACTgC,SAAS;IACTM,mBAAmB;IACnBD,cAAc;IACdb,kBAAkB;IAClBiB,QAAQ;IACR3C;EACF,CAAC;EAED,oBACEL,OAAA,CAACC,WAAW,CAACiD,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACvCjD,KAAK,CAACiD;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACpD,EAAA,CA3GWF,mBAAmB;AAAAuD,EAAA,GAAnBvD,mBAAmB;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/shaylavi/Desktop/bstore/src/pages/Login/forgotpassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport emailjs from '@emailjs/browser';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [code, setCode] = useState('');\n  const [email, setEmail] = useState('');\n  const [confirmationCode, setConfirmationCode] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  function generateRandomCode() {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+{}[]|;:<>,.?/~';\n    let code = '';\n    const codeLength = 6;\n    for (let i = 0; i < codeLength; i++) {\n      const randomIndex = Math.floor(Math.random() * characters.length);\n      code += characters.charAt(randomIndex);\n    }\n    return code;\n  }\n  const handleSendConfirmationCode = async e => {\n    console.log('emasdail');\n    console.log(user);\n    if (!user) {\n      alert('User not found');\n      return;\n    } else {\n      e.preventDefault();\n      emailjs.init(\"98g7Qzscyfz-S-J7p\");\n      const serviceId = \"service_lxiaq84\";\n      const templateId = \"template_en7libv\";\n      const generatedCode = generateRandomCode();\n      setConfirmationCode(generatedCode);\n      emailjs.send(serviceId, templateId, {\n        email: email,\n        code: generatedCode\n      });\n      alert('Confirmation code sent. Please check your email.');\n    }\n  };\n  const passwordContainsSymbols = password => {\n    const symbols = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', '-', '=', '[', ']', '{', '}', ';', ':', \"'\", '\"', '\\\\', '|', ',', '.', '<', '>', '/', '?'];\n    return symbols.some(symbol => password.includes(symbol));\n  };\n  const passwordContainsnNumbers = password => {\n    const numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    return numbers.some(number => password.includes(number));\n  };\n  const handleSignIn = async e => {\n    e.preventDefault();\n    if (code === confirmationCode) {\n      alert('Confirmation code verified');\n      try {\n        if (password.length < 8) return alert(\"Password must be at least 8 characters long.\");\n        if (!passwordContainsSymbols(password)) return alert(\"Password must contain at least one symbol.\");\n        if (!passwordContainsnNumbers(password)) return alert(\"Password must contain numbers.\");else {\n          const user = await axios.get(`http://localhost:6500/user/${email}`);\n          user.password = password;\n          const response = await axios.put(`http://localhost:6500/user/${email}`, {\n            user\n          });\n          alert('Password updated successfully');\n        }\n      } catch (error) {\n        console.error('Error fetching user data: ', error);\n      }\n      navigate('/');\n    } else {\n      alert('Code is incorrect');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'code') {\n      setCode(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendConfirmationCode,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your email\",\n          onChange: handleChange,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: \"Send Confirmation Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2.5rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignIn,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter confirmation code\",\n          onChange: handleChange,\n          name: \"code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your new password\",\n          onChange: handleChange,\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPassword, \"ssZaGYAJm1W119h/CM8cGoOZuLo=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","emailjs","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","code","setCode","email","setEmail","confirmationCode","setConfirmationCode","password","setPassword","navigate","generateRandomCode","characters","codeLength","i","randomIndex","Math","floor","random","length","charAt","handleSendConfirmationCode","e","console","log","user","alert","preventDefault","init","serviceId","templateId","generatedCode","send","passwordContainsSymbols","symbols","some","symbol","includes","passwordContainsnNumbers","numbers","number","handleSignIn","get","response","put","error","handleChange","name","value","target","children","style","marginTop","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shaylavi/Desktop/bstore/src/pages/Login/forgotpassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport emailjs from '@emailjs/browser';\nimport axios from 'axios';\n\nconst ForgotPassword = () => {\n    const [code, setCode] = useState('');\n    const [email, setEmail] = useState('');\n    const [confirmationCode, setConfirmationCode] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    function generateRandomCode() {\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+{}[]|;:<>,.?/~';\n        let code = '';\n        const codeLength = 6;\n      \n        for (let i = 0; i < codeLength; i++) {\n          const randomIndex = Math.floor(Math.random() * characters.length);\n          code += characters.charAt(randomIndex);\n        }\n      \n        return code;\n    }\n\n    const handleSendConfirmationCode = async(e) => {\n        console.log('emasdail');\n        console.log(user);\n        if (!user) {\n            alert('User not found');\n            return;\n        }\n        else{\n        e.preventDefault();\n        emailjs.init(\"98g7Qzscyfz-S-J7p\");\n        const serviceId = \"service_lxiaq84\";\n        const templateId = \"template_en7libv\";\n        const generatedCode = generateRandomCode();\n        setConfirmationCode(generatedCode);\n        emailjs.send(serviceId, templateId, {\n            email: email,\n            code: generatedCode\n        });\n        alert('Confirmation code sent. Please check your email.');\n        }\n    }\n    const passwordContainsSymbols = (password) => {\n        const symbols = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', '-', '=', '[', ']', '{', '}', ';', ':', \"'\", '\"', '\\\\', '|', ',', '.', '<', '>', '/', '?'];\n        return symbols.some(symbol => password.includes(symbol));\n      };\n      const passwordContainsnNumbers = (password) => {\n        const numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n        return numbers.some(number => password.includes(number));\n      };\n    const handleSignIn = async (e) => {\n        e.preventDefault();\n        if (code === confirmationCode) {\n            alert('Confirmation code verified');\n            try{\n                if((password.length < 8) ) return alert(\"Password must be at least 8 characters long.\")\n                if(!passwordContainsSymbols(password)) return alert(\"Password must contain at least one symbol.\")\n                if(!passwordContainsnNumbers(password)) return alert(\"Password must contain numbers.\")\n                else{\n                const user = await axios.get(`http://localhost:6500/user/${email}`);\n                user.password = password;\n                const response = await axios.put(`http://localhost:6500/user/${email}`, {user});\n                alert('Password updated successfully');}\n            }\n            catch(error){\n                console.error('Error fetching user data: ' , error);\n            }\n            navigate('/');\n        } else {\n            alert('Code is incorrect');\n        }\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name === 'email') {\n            setEmail(value);\n        } else if (name === 'code') {\n            setCode(value);\n        }\n        else if (name === 'password') {\n            setPassword(value);\n        }\n    }\n\n    return (\n        <div>\n            <div style={{ marginTop: '20rem' }}>\n                <form onSubmit={handleSendConfirmationCode}>\n                    <input type=\"text\" placeholder='Enter your email' onChange={handleChange} name='email' />\n                    <button style={{ marginTop: '1rem' }}>Send Confirmation Code</button>\n                </form>\n            </div>\n            <div style={{ marginTop: '2.5rem' }}>\n                <form onSubmit={handleSignIn}>\n                    <input type=\"text\" placeholder='Enter confirmation code' onChange={handleChange} name='code' />\n                    <input type=\"text\" placeholder='Enter your new password' onChange={handleChange} name='password' />\n                    <button style={{ marginTop: '1rem' }}>Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}